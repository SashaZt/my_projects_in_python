import re
from pathlib import Path

from config import logger, session_directory


def validate_phone_number(phone_number: str) -> str:
    if not re.match(r"^\+\d{10,15}$", phone_number):
        raise ValueError("‚ùå –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ +1234567890.")
    return phone_number


def get_session_name():
    sessions = list(session_directory.glob("*.session"))

    if sessions:
        logger.info("üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Å—Å–∏–∏:")
        for i, session in enumerate(sessions, 1):
            logger.info(f"{i}. {session.stem}")

        choice = input(
            " –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–µ—Å—Å–∏–∏ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: "
        ).strip()
        try:
            choice_idx = int(choice) - 1
            if 0 <= choice_idx < len(sessions):
                phone_number = sessions[choice_idx].stem
            else:
                phone_number = validate_phone_number(
                    input("üìû –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ").strip()
                )
        except ValueError:
            phone_number = validate_phone_number(choice)
    else:
        logger.error("‚ùå –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π.")
        phone_number = validate_phone_number(
            input("üìû –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ").strip()
        )

    session_name = session_directory / f"{phone_number}.session"
    logger.info(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–µ—Å—Å–∏—è: {session_name}")
    return phone_number, str(session_name)
