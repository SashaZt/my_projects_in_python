# /handles/start.py
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from db.models import User
from keyboards import reply as kb
from sqlalchemy.future import select
from sqlalchemy.ext.asyncio import AsyncSession
from datetime import datetime

router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message, session: AsyncSession, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    await state.clear()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    await get_or_create_user(session, message.from_user)

    await message.answer(
        "–ü—Ä–∏–≤—ñ—Ç! üòä\n"
        "–Ø ‚Äî —Ç–≤—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫ –¥–ª—è —à–≤–∏–¥–∫–æ—ó –ø–æ–∫—É–ø–∫–∏ Roblox-–∫–∞—Ä—Ç–æ–∫.\n"
        "–¢—É—Ç —Ç–∏ –º–æ–∂–µ—à –ª–µ–≥–∫–æ –æ–±—Ä–∞—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –Ω–æ–º—ñ–Ω–∞–ª, –æ–ø–ª–∞—Ç–∏—Ç–∏ –π –º–∏—Ç—Ç—î–≤–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–¥.üî•\n"
        "–ì–æ—Ç–æ–≤–∏–π –ø–æ—á–∞—Ç–∏? –û–±–µ—Ä–∏ –¥—ñ—é –Ω–∏–∂—á–µ! üëá",
        reply_markup=kb.get_start_keyboard(),
    )


@router.message(F.text == "‚ÑπÔ∏è –Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?")
async def how_it_works(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?'"""
    await message.answer(
        "‚ÑπÔ∏è <b>–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?:</b>\n\n"
        "1. –û–±–∏—Ä–∞—î—à Roblox-–∫–∞—Ä—Ç–∫—É\n"
        "‚Äî –ù–∞–ø—Ä–∏–∫–ª–∞–¥: 10$, 25$ —á–∏ 50$\n"
        "2. –û–ø–ª–∞—á—É—î—à –ø–æ–∫—É–ø–∫—É\n"
        "‚Äî –ß–µ—Ä–µ–∑ –∑—Ä—É—á–Ω—É —Å–∏—Å—Ç–µ–º—É –∞–±–æ –Ω–∞ –±–∞–Ω–∫—ñ–≤—Å—å–∫—É –∫–∞—Ä—Ç–∫—É\n"
        "3. –û—Ç—Ä–∏–º—É—î—à –∫–æ–¥ –º–∏—Ç—Ç—î–≤–æ\n"
        "‚Äî –ë–æ—Ç –Ω–∞–¥—Å–∏–ª–∞—î —Ç–æ–±—ñ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–æ–¥ –ø—Ä—è–º–æ –≤ —á–∞—Ç\n"
        "4. –ê–∫—Ç–∏–≤—É—î—à –Ω–∞ —Å–∞–π—Ç—ñ\n"
        "‚Äî –ü–µ—Ä–µ—Ö–æ–¥–∏—à –Ω–∞ roblox.com/redeem, –≤–≤–æ–¥–∏—à –∫–æ–¥ ‚Äî —ñ –æ—Ç—Ä–∏–º—É—î—à —Å–≤–æ—ó Robux!\n\n"
        "–Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ —Ä–æ–∑–¥—ñ–ª—É –ü—ñ–¥—Ç—Ä–∏–º–∫–∞.",
        reply_markup=kb.get_main_menu_keyboard(),
    )


@router.message(F.text == "üìã –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é")
async def main_menu(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é'"""
    await message.answer(
        "üìã <b>–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é</b>\n\n" "–í–∏–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ä–æ–∑–¥—ñ–ª:",
        reply_markup=kb.get_main_menu_keyboard(),
    )


async def get_or_create_user(session: AsyncSession, user_info):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î"""
    # –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    stmt = select(User).where(User.user_id == user_info.id)
    result = await session.execute(stmt)
    user = result.scalar_one_or_none()

    now = datetime.now()

    if user:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
        user.username = user_info.username
        user.first_name = user_info.first_name
        user.last_name = user_info.last_name
        user.language_code = user_info.language_code
        user.last_activity = now
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ
        user = User(
            user_id=user_info.id,
            username=user_info.username,
            first_name=user_info.first_name,
            last_name=user_info.last_name,
            language_code=user_info.language_code,
            last_activity=now,
        )
        session.add(user)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    await session.commit()
    return user
