# /handles/start.py
import sys
from datetime import datetime
from pathlib import Path

from aiogram import F, Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message
from db.models import CardCode, Order, User
from handlers.admin import AdminStates, is_admin
from keyboards import inline as ikb
from keyboards import reply as kb
from sqlalchemy import func
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select

router = Router()

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
ROOT_DIR = Path(__file__).parent.parent.absolute()
if str(ROOT_DIR) not in sys.path:
    sys.path.insert(0, str(ROOT_DIR))

from config.logger import logger

from config.config import Config


@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞
    args = message.text.split()
    if len(args) > 1:
        start_param = args[1]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ (–¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã)
        if start_param.startswith("order_"):
            try:
                order_id = int(start_param.split("_")[1])

                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
                stmt = select(Order).where(Order.order_id == order_id)
                result = await session.execute(stmt)
                order = result.scalar_one_or_none()

                if order and order.user_id == message.from_user.id:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
                    if order.status in ["paid", "completed"]:
                        await message.answer(
                            f"‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É –∑–∞–∫–∞–∑–∞ #{order_id}!\n\n"
                            "–í–∞—à –∫–æ–¥ —É–∂–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç. –ï—Å–ª–∏ –≤—ã –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –∫–æ–¥, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
                        )
                    elif order.status == "created":
                        await message.answer(
                            f"‚è≥ –í–∞—à –∑–∞–∫–∞–∑ #{order_id} –µ—â–µ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ.\n\n"
                            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è. –ï—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, "
                            "–æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
                        )
                    else:
                        await message.answer(
                            f"‚ùå –í–∞—à –∑–∞–∫–∞–∑ #{order_id} –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω –∏–ª–∏ –Ω–µ –æ–ø–ª–∞—á–µ–Ω.\n\n"
                            "–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è."
                        )
            except (ValueError, IndexError):
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã

    config = Config.load()
    is_admin = message.from_user.id in config.bot.admin_ids

    # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = await get_or_create_user(session, message.from_user)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_text = (
        f"üëã <b>–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}!</b> üòä\n\n"
        f"–Ø ‚Äî —Ç–≤—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫ –¥–ª—è —à–≤–∏–¥–∫–æ—ó –ø–æ–∫—É–ø–∫–∏ Roblox-–∫–∞—Ä—Ç–æ–∫.\n"
        f"–¢—É—Ç —Ç–∏ –º–æ–∂–µ—à –ª–µ–≥–∫–æ –æ–±—Ä–∞—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –Ω–æ–º—ñ–Ω–∞–ª, –æ–ø–ª–∞—Ç–∏—Ç–∏ –π –º–∏—Ç—Ç—î–≤–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–¥.üëæ\n"
        f"–ì–æ—Ç–æ–≤–∏–π –ø–æ—á–∞—Ç–∏? –û–±–µ—Ä–∏ –¥—ñ—é –Ω–∏–∂—á–µ! üëá\n\n"
    )

    if is_admin:
        welcome_text += (
            "<i>–í–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –Ω–∏–∂—á–µ:</i>"
        )
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∞
        keyboard = kb.get_admin_keyboard()
    else:
        # welcome_text += "<i>–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ:</i>"
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        keyboard = kb.get_main_menu_keyboard()

    await message.answer(welcome_text, reply_markup=keyboard)

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    await state.clear()


@router.callback_query(F.data == "admin_panel")
async def admin_panel_button(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    config = Config.load()
    if callback.from_user.id not in config.bot.admin_ids:
        await callback.answer(
            "‚õî –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.",
            show_alert=True,
        )
        return

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
    await callback.message.edit_text(
        "üõ† <b>–ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å</b>\n\n" "–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é:",
        reply_markup=ikb.get_admin_main_keyboard(),
    )
    await state.set_state(AdminStates.main_menu)
    await callback.answer()


@router.callback_query(F.data == "user_mode")
async def switch_to_user_mode(callback: CallbackQuery, state: FSMContext):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    await callback.message.edit_text(
        "üë§ <b>–†–µ–∂–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞</b>\n\n"
        "–í–∏ –ø–µ—Ä–µ–π—à–ª–∏ –≤ —Ä–µ–∂–∏–º –∑–≤–∏—á–∞–π–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. "
        "–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ:",
        reply_markup=ikb.get_main_menu_keyboard(),
    )
    await callback.answer("–í–∏ –ø–µ—Ä–µ–π—à–ª–∏ –≤ —Ä–µ–∂–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")


@router.message(F.text == "‚ÑπÔ∏è –Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?")
async def how_it_works(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?'"""
    await message.answer(
        "‚ÑπÔ∏è <b>–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?:</b>\n\n"
        "‚ùó–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –∫–æ–¥—É —á–µ—Ä–µ–∑ –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç –≥—Ä–∏, –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–∞–º'—è—Ç–∞—Ç–∏ <b>–Ω—ñ–∫–Ω–µ–π–º —Ç–∞ –ø–∞—Ä–æ–ª—å</b> –≤—ñ–¥ –≤–∞—à–æ–≥–æ Roblox –∞–∫–∞—É–Ω—Ç—É.\n"
        "–ê–∫—Ç–∏–≤–∞—Ü—ñ—è –º–æ–∂–ª–∏–≤–∞ —Ç—ñ–ª—å–∫–∏ –¥–ª—è <b>—É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö</b> –∞–∫–∞—É–Ω—Ç—ñ–≤ –∞–±–æ –∞–∫–∞—É–Ω—Ç—ñ–≤ <b>–∑ –≤–∞–ª—é—Ç–æ—é –º–∞–≥–∞–∑–∏–Ω—É –¥–æ–ª–∞—Ä.</b>‚ùó\n\n"
        "1. –û–±–∏—Ä–∞—î—à Roblox-–∫–∞—Ä—Ç–∫—É\n"
        "–ù–∞–ø—Ä–∏–∫–ª–∞–¥: 10$, 20$ —á–∏ 50$\n"
        "2. –û–ø–ª–∞—á—É—î—à –ø–æ–∫—É–ø–∫—É\n"
        "–ß–µ—Ä–µ–∑ –∑—Ä—É—á–Ω—É —Å–∏—Å—Ç–µ–º—É –∞–±–æ –∫–∞—Ä—Ç–∫–æ—é\n"
        "3. –û—Ç—Ä–∏–º—É—î—à –∫–æ–¥ –º–∏—Ç—Ç—î–≤–æ\n"
        "–ë–æ—Ç –Ω–∞–¥—Å–∏–ª–∞—î —Ç–æ–±—ñ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–æ–¥ —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é –ø—Ä—è–º–æ –≤ —á–∞—Ç\n"
        "<b>–í –∫–æ–º–ø–ª–µ–∫—Ç—ñ –¥–æ –∫–æ–¥—É –±—É–¥–µ –≤—ñ–¥–µ–æ —Ç–∞ —Ç–µ–∫—Å—Ç–æ–≤–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –¥–ª—è —É—Å–ø—ñ—à–Ω–æ—ó –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó!</b>\n"
        "4. –ê–∫—Ç–∏–≤—É—î—à –Ω–∞ —Å–∞–π—Ç—ñ. "
        "–ü–µ—Ä–µ—Ö–æ–¥–∏—à –Ω–∞ roblox.com/redeem (—Ü–µ –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç –≥—Ä–∏ Roblox ), –≤–≤–æ–¥–∏—à –∫–æ–¥ ‚Äî —ñ –æ—Ç—Ä–∏–º—É—î—à —Å–≤–æ—ó Robux!\n\n"
        "–Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ —Ä–æ–∑–¥—ñ–ª—É –ü—ñ–¥—Ç—Ä–∏–º–∫–∞.",
        reply_markup=kb.get_main_menu_keyboard(),
    )


@router.message(F.text == "üìã –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é")
async def main_menu(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é'"""
    await message.answer(
        "üìã <b>–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é</b>\n\n" "–í–∏–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ä–æ–∑–¥—ñ–ª:",
        reply_markup=kb.get_main_menu_keyboard(),
    )


async def get_or_create_user(session: AsyncSession, user_info):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î"""
    # –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    stmt = select(User).where(User.user_id == user_info.id)
    result = await session.execute(stmt)
    user = result.scalar_one_or_none()

    now = datetime.now()

    if user:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
        user.username = user_info.username
        user.first_name = user_info.first_name
        user.last_name = user_info.last_name
        user.language_code = user_info.language_code
        user.last_activity = now
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ
        user = User(
            user_id=user_info.id,
            username=user_info.username,
            first_name=user_info.first_name,
            last_name=user_info.last_name,
            language_code=user_info.language_code,
            last_activity=now,
        )
        session.add(user)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    await session.commit()
    return user


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–î–æ–¥–∞—Ç–∏ –∫–æ–¥" –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
@router.message(F.text == "‚ûï –î–æ–¥–∞—Ç–∏ –∫–æ–¥")
async def add_code_button(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞"""
    if not is_admin(message.from_user.id):
        return

    await message.answer(
        "‚ûï <b>–î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–¥—ñ–≤</b>\n\n" "–í–∏–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–¥—ñ–≤:",
        reply_markup=ikb.get_admin_add_code_keyboard(),
    )
    await state.set_state(AdminStates.add_code_menu)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
@router.message(F.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def stats_button(message: Message, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    if not is_admin(message.from_user.id):
        return

    # –°—á–∏—Ç–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    orders_count = await session.scalar(select(func.count()).select_from(Order))
    users_count = await session.scalar(select(func.count()).select_from(User))
    cards_total = await session.scalar(select(func.count()).select_from(CardCode))
    cards_used = await session.scalar(
        select(func.count()).select_from(CardCode).where(CardCode.is_used == True)
    )

    # –†–∞—Å—á–µ—Ç —Å—É–º–º—ã –≤—Å–µ—Ö –ø–ª–∞—Ç–µ–∂–µ–π
    total_payments = await session.scalar(
        select(func.coalesce(func.sum(Order.price), 0)).where(
            Order.status == "completed"
        )
    )

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    stats_message = (
        "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞</b>\n\n"
        f"üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {users_count}\n"
        f"üõç –ó–∞–º–æ–≤–ª–µ–Ω—å: {orders_count}\n"
        f"üíµ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –æ–ø–ª–∞—Ç: {total_payments:.2f}‚Ç¥\n\n"
        f"üéÆ –ö–∞—Ä—Ç–∫–∏:\n"
        f"‚ûñ –í—Å—å–æ–≥–æ: {cards_total}\n"
        f"‚ûñ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ: {cards_used}\n"
        f"‚ûñ –î–æ—Å—Ç—É–ø–Ω–æ: {cards_total - cards_used}\n"
    )

    await message.answer(stats_message)


# –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –∫–Ω–æ–ø–æ–∫
@router.message(F.text == "üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ")
async def users_button(message: Message, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    if not is_admin(message.from_user.id):
        return

    # [–∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–∫ –≤ callback_query]


@router.message(F.text == "üéÅ –†–æ–∑—ñ–≥—Ä–∞—à / –ë–æ–Ω—É—Å–∏")
async def promos_button(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–º–æ-–∞–∫—Ü–∏–π"""
    if not is_admin(message.from_user.id):
        return

    # [–∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–∫ –≤ callback_query]


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message(F.text == "üë®‚Äçüíª –†–µ–∂–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
async def user_mode_button(message: Message, state: FSMContext):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if not is_admin(message.from_user.id):
        return

    await message.answer(
        "üë§ <b>–†–µ–∂–∏–º –∑–≤–∏—á–∞–π–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞</b>\n\n"
        "–í–∏ –ø–µ—Ä–µ–π—à–ª–∏ –≤ —Ä–µ–∂–∏–º –∑–≤–∏—á–∞–π–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.",
        reply_markup=kb.get_main_menu_keyboard(),
    )
