import json

import requests

# cookies = {
#     "LNG": "UA",
#     "_csrf": "c1e6328d4d1a00430f580954cd699bfcb582e349d7cdb35b0fc25fc69f79504fa%3A2%3A%7Bi%3A0%3Bs%3A5%3A%22_csrf%22%3Bi%3A1%3Bs%3A32%3A%22sPIghgsE62pvjuIdspysobQGcw1EBt3j%22%3B%7D",
#     "device-referrer": "https://edrpou.ubki.ua/ua/FO12726884",
#     "device-source": "https://edrpou.ubki.ua/ua/FO14352035",
# }

# headers = {
#     "accept": "*/*",
#     "accept-language": "ru,en;q=0.9,uk;q=0.8",
#     "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
#     # 'cookie': 'LNG=UA; _csrf=c1e6328d4d1a00430f580954cd699bfcb582e349d7cdb35b0fc25fc69f79504fa%3A2%3A%7Bi%3A0%3Bs%3A5%3A%22_csrf%22%3Bi%3A1%3Bs%3A32%3A%22sPIghgsE62pvjuIdspysobQGcw1EBt3j%22%3B%7D; device-referrer=https://edrpou.ubki.ua/ua/FO12726884; device-source=https://edrpou.ubki.ua/ua/FO14352035',
#     "dnt": "1",
#     "origin": "https://edrpou.ubki.ua",
#     "priority": "u=1, i",
#     "referer": "https://edrpou.ubki.ua/ua",
#     "sec-ch-ua": '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
#     "sec-ch-ua-mobile": "?0",
#     "sec-ch-ua-platform": '"Windows"',
#     "sec-fetch-dest": "empty",
#     "sec-fetch-mode": "cors",
#     "sec-fetch-site": "same-origin",
#     "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",
#     "x-csrf-token": "V3braoDaxccc2EIecpi2D4UXNjQf0ylfFHOjHuEk80AkJqIN6L22girqMmgY7f9r9mdPR3CxeBh3BJJbo1DAKg==",
#     "x-requested-with": "XMLHttpRequest",
# }

# params = {
#     "signature": "71cdde7e23dc850751823112839bf8136a186164",
#     "scheme": "cki",
#     "reqid": "",
# }

# data = {
#     "tp": "1",
#     "page": "1",
#     "dr_common_data": "3876303462",
#     "dr_regions": "",
#     "dr_edrstate": "",
#     "dr_kvedcode": "",
#     "dr_search_just": "true",
#     "dr_search_type": "1",
# }

# response = requests.post(
#     "https://edrpou.ubki.ua/srchopenitems",
#     params=params,
#     cookies=cookies,
#     headers=headers,
#     data=data,
#     timeout=30,
# )
# json_data = response.json()
# with open("kyky.json", "w", encoding="utf-8") as f:
#     json.dump(json_data, f, ensure_ascii=False, indent=4)  # Записываем в файл


# def extract_user_name(user_id, user_options):
#     filtered_user = list(filter(lambda x: x["value"] == user_id, user_options))
#     return filtered_user[0]["text"] if filtered_user else None


# def process_data(data):
#     result = []
#     user_options = data["meta"]["fields"]["userId"]["options"]

#     for item in data["data"]:
#         try:
#             entry = {
#                 "id_data": item["id"],
#                 "phone_contact": (
#                     item["contacts"][0]["phone"][0] if item["contacts"] else None
#                 ),
#                 "user_name": extract_user_name(item["userId"], user_options),
#             }
#             result.append(entry)
#         except (KeyError, IndexError) as e:
#             print(f"Ошибка обработки записи: {e}")
#             continue

#     return result


# # Load the JSON data
# with open("kyky.json", "r", encoding="utf-8") as file:
#     data = json.load(file)
# # Использование
# all_data = process_data(data)
# print(all_data)


def find_matching_records(records_bd, records_salesdrive):
    formatted_records = []  # Список для хранения всех совпадений
    matched_ids = (
        []
    )  # Список для хранения id из records_bd, по которым найдены совпадения

    for bd_record in records_bd:
        phone_bd = bd_record["phone"]
        phone_bd_no_prefix = phone_bd[2:] if phone_bd.startswith("38") else phone_bd
        manager_name_bd = bd_record["manager_name"]

        # Будем хранить все совпадения для текущей записи
        matches = []

        # Поиск совпадений по полному номеру
        for sd_record in records_salesdrive:
            if (
                sd_record["phone_contact"] == phone_bd
                and sd_record["user_name"] == manager_name_bd
            ):
                matches.append(sd_record)

        # Поиск совпадений без префикса 38, если не нашли по полному номеру
        if not matches:
            for sd_record in records_salesdrive:
                if (
                    sd_record["phone_contact"] == phone_bd_no_prefix
                    and sd_record["user_name"] == manager_name_bd
                ):
                    matches.append(sd_record)

        # Если нашли совпадения, берем запись с максимальным id_data
        if matches:
            # Сортируем по id_data в убывающем порядке и берем первый элемент
            best_match = max(matches, key=lambda x: x["id_data"])

            formatted_record = {
                "id": best_match["id_data"],
                "data": {"comment": bd_record["notes"]},
            }
            formatted_records.append(formatted_record)
            matched_ids.append(bd_record["id"])  # Добавляем id в список найденных

    return formatted_records, matched_ids


# Пример использования:
"""
records_bd = [
    {"phone": "380123456789", "manager_name": "John", "notes": "Note 1"},
    {"phone": "380987654321", "manager_name": "Mike", "notes": "Note 2"}
]

records_salesdrive = [
    {"phone_contact": "380123456789", "user_name": "John", "id_data": 1},
    {"phone_contact": "0123456789", "user_name": "John", "id_data": 2},
    {"phone_contact": "380987654321", "user_name": "Mike", "id_data": 3}
]

result = find_matching_records(records_bd, records_salesdrive)
print(result)
# Вывод будет содержать все найденные совпадения
"""


def update_order_comments(orders_data):
    """
    Обновляет комментарии для списка заявок

    Args:
        orders_data (list): Список словарей с данными заявок

    Returns:
        list: Список результатов обновления для каждой заявки
    """
    results = []

    try:
        url = "https://zubr.salesdrive.me/api/order/update/"
        headers = {
            "Form-Api-Key": "3m7xasIXKX7ME3TmEiN_CU2tajKMEtilHQ-smKeXnSFTKReKV2jEFn8J3TUoYC_aZa-dGQvC-c_NhV9Akl-gCTd-LfGT7v_dZlpe",
            "Content-Type": "application/json",
        }

        for order_data in orders_data:
            try:
                logger.info(
                    f"Отправляем запрос на обновление заявки {order_data['id']}"
                )

                response = requests.post(
                    url,
                    headers=headers,
                    json=order_data,
                    timeout=(10, 30),  # (connect timeout, read timeout)
                )

                logger.info(f"Получен ответ со статусом: {response.status_code}")

                if response.status_code == 200:
                    results.append(
                        {
                            "id": order_data["id"],
                            "status": "success",
                            "response": response.json(),
                        }
                    )
                else:
                    results.append(
                        {
                            "id": order_data["id"],
                            "status": "error",
                            "error": f"API request failed with status code: {response.status_code}",
                        }
                    )

            except requests.exceptions.Timeout:
                logger.error(f"Timeout при запросе к API для заявки {order_data['id']}")
                results.append(
                    {
                        "id": order_data["id"],
                        "status": "error",
                        "error": "Timeout error",
                    }
                )
            except Exception as e:
                logger.error(f"Ошибка при обновлении заявки {order_data['id']}: {e}")
                results.append(
                    {"id": order_data["id"], "status": "error", "error": str(e)}
                )

    except Exception as e:
        logger.error(f"Критическая ошибка при обновлении заявок: {e}")
        raise

    return results


# Пример использования:
"""
orders_data = [
    {"id": 1, "data": {"comment": "Comment 1"}},
    {"id": 2, "data": {"comment": "Comment 2"}},
    {"id": 3, "data": {"comment": "Comment 3"}}
]

results = update_order_comments(orders_data)
for result in results:
    print(f"Заявка {result['id']}: {result['status']}")
"""


# Пример с несколькими совпадениями:
records_bd = [
    {
        "id": 239,
        "date": "2025-01-29 10:00:10",
        "phone": "380685190511",
        "manager_name": "Петро Ким",
        "notes": " Консультація щодо котлів (0001 - 0111)\nКлієнт цікавиться ціною котла на 100 квадратних метрів\nНайбюджетніший варіант - класичний котел 12 кВт за 19500 грн\nШахтні котли рекомендовані для систем з великим обємом води\nШахтні котли дорожчі, від 32000 грн\nРекомендація встановлювати шахтні котли в окремому приміщенні\n Додаткова інформація про котли (0117 - 0224)\nКласичні котли від 20000 грн\nКотли з 3 мм сталі від 14000 грн\nКотли з 5 мм сталі служать до 25 років\nБезкоштовна доставка по всій Україні\nМожливість доставки Новою Поштою до дверей\n Планування покупки (0229 - 0302)\nКлієнт планує купівлю не на поточний сезон\nПопередження про можливе підвищення цін навесні\nПропозиція звернутися за додатковою консультацією до Діми\n",
    },
    {
        "id": 240,
        "date": "2025-01-29 10:15:15",
        "phone": "380676712106",
        "manager_name": "Cухотерин Виталий",
        "notes": " Звернення щодо гарантійного ремонту котла (0000 - 0130)\nКлієнт Віталій звернувся щодо протікання котла, купленого у 2023 році\nПротікання виявлено в трубці, де відкривається затвор\nКлієнту потрібно надати фото, відео, заводський номер котла та особисті дані\nПредставник компанії попросив надіслати інформацію через Viber\n",
    },
    {
        "id": 241,
        "date": "2025-01-29 10:31:58",
        "phone": "380993724437",
        "manager_name": "Вадим Мишковець",
        "notes": " Запит на котел Зубер (0006 - 0040)\nКлієнт цікавиться котлом Зубер стандарт 16 кВт для перепродажу\nЗапитує про можливі знижки\nПредставляється як магазин\n Обговорення знижки та умов (0040 - 0108)\nКомпанія пропонує 20 знижки для магазинів\nКлієнт має надати установчі документи\nБезкоштовна доставка Новою поштою або курєром\n Деталі замовлення та оплати (0108 - 0223)\nОбговорення термінів доставки (до тижня)\nЦіна котла 33 500 грн мінус 20 знижки\nКлієнт планує узгодити деталі з монтажником\nДомовленість про подальшу комунікацію через Viber\n",
    },
    {
        "id": 242,
        "date": "2025-01-29 10:48:01",
        "phone": "380675780665",
        "manager_name": "Яна Віленська",
        "notes": " Консультація щодо котла (0001 - 0205)\nКлієнт звернувся за консультацією щодо котла потужністю 15 кВт\nПроблема клієнт не знав, як встановити форсунку в котлі\nКонсультант пояснив правильне розташування форсунки\n- Встановлюється в другу камеру\n- На одному рівні з колосниками\n- Дірочками вгору\n- Перевернута пластина\nНа сайті компанії є відео-інструкція тривалістю 20 секунд\nКлієнт використовував котел без форсунки, топив брикетами соняшника\nФорсунка - головна деталь котла, покращує його роботу\n",
    },
    {
        "id": 243,
        "date": "2025-01-29 12:47:24",
        "phone": "380669420501",
        "manager_name": "Яна Віленська",
        "notes": " Консультація щодо котла (0003 - 0102) Клієнт шукає котел для будинку площею 96-94 квадратних метри Рекомендована потужність котла 10-12 кВт Нові батареї встановлені в будинку Допустимий запас потужності до 20  Обговорення типів котлів (0102 - 0143) Пояснення різниці між класичним і шахтним котлом Клієнт віддає перевагу шахтному котлу (завантаження зверху) Розміри топки шахтного котла 32x36 см, висота 80 см Обєм топки 90 літрів  Характеристики рекомендованого котла (0143 - 0220) Котел нижнього горіння з ККД до 95 Товщина сталі 5 мм Висока тривалість горіння та економія палива Доступні моделі неутеплена та утеплена (з термоізоляцією) Рекомендовано утеплену модель для мінімізації тепловтрат  Ціна та додаткова інформація (0220 - 0258) Модель UberThermo коштує 34500 грн Клієнт просить надіслати інформацію та фото котла на Viber Номер телефону клієнта 067-66-58-250",
    },
    {
        "id": 244,
        "date": "2025-01-29 14:24:44",
        "phone": "380663550219",
        "manager_name": "Яна Віленська",
        "notes": " Запит на розстрочку (0001 - 0043) Клієнт цікавиться можливістю купівлі плити в розстрочку без відсотків Компанія пропонує розстрочку через банки Приват, Моно, Абанк, Банкпумп Розстрочка на 6 місяців без переплат для фізичних осіб  Альтернативні варіанти оплати (0043 - 0120) Клієнт не має кредитних карток Пропозиція оформити кредит через Нову Пошту Умови 2,5 місячних, необхідний паспорт Можливість оплати частинами, але товар відправляється після повної оплати  Ціни та знижки (0129 - 0219) Ціна на котел 70-ка термо 73 500 грн Ціна на неутеплений утилізатор 7 500 грн Відсутність знижок на готівкову оплату Безкоштовна доставка як єдина пропозиція",
    },
    {
        "id": 245,
        "date": "2025-01-29 14:30:03",
        "phone": "380973674128",
        "manager_name": "Яна Віленська",
        "notes": " Замовлення другого котла (0000 - 0128) Клієнт (Сергій Володимирович Трибрат) хоче замовити ще один котел Попереднє замовлення утилізатор 25 кВт для міста Глобина Ціна котла залишилася незмінною з літа 37 500 грн У клієнта є знижковий сертифікат на наступний котел Це буде третій котел для клієнта",
    },
    {
        "id": 246,
        "date": "2025-01-29 15:34:07",
        "phone": "380675087473",
        "manager_name": "Вадим Мишковець",
        "notes": " Обговорення котлів Зубр (0003 - 0430) Клієнт шукає котел для площі до 100 квадратних метрів Розглядаються моделі 10 кВт та 12 кВт Ціна базової моделі 10 кВт - 18500 грн Різниця в ціні між 10 кВт і 12 кВт - 1000 грн Обговорюються розміри топки та довжина дров для різних моделей  Технічні характеристики котлів (0431 - 0730) Котли працюють на різних видах твердого палива Час роботи на одному завантаженні 3-4 години для твердих порід, 2 години для мяких Обговорюється конструкція теплообмінника та його чистка Неутеплений котел буде гарячим зовні, утеплений - комфортної температури  Розміри та встановлення (0731 - 1005) Обговорюються розміри котла та розташування патрубків Висота до центру димоходу - 55 см Можливість регулювання висоти котла (обрізання ніжок або встановлення на цеглу)  Гарантія та експлуатація (1006 - 1305) Гарантія на герметичність котла - 5 років Термін служби при правильній експлуатації - до 25 років Рекомендована робоча температура 60-100C Обговорюються варіанти оплати, включаючи можливість оплати з ФОП",
    },
    {
        "id": 247,
        "date": "2025-01-30 09:58:47",
        "phone": "380507260648",
        "manager_name": "Яна Віленська",
        "notes": " Обговорення опалювальної системи (0001 - 1013) Потрібен котел 16 кВт Димохід сендвіч, мінімум 5 метрів Комплект димоходу труби, трійник, конус Все обладнання має бути в розстрочку Механічний регулятор тяги за 900 грн Група безпеки з манометром і скидним клапаном за 1500 грн Розширювальний бак на 12 літрів за 1800 грн Загальна вартість без димоходу 32 700 грн Димохід нержавійка в оцинковці 0,8 мм (дешевший варіант) Можливість оформлення розстрочки на двох осіб",
    },
    {
        "id": 248,
        "date": "2025-01-30 10:31:10",
        "phone": "380689555438",
        "manager_name": "Вадим Мишковець",
        "notes": " Звернення щодо гарантійного обслуговування котла (0002 - 0220) Клієнт звернувся щодо гарантійного обслуговування котла Зубер Котел шахтного типу, 18 кВт Заявка на сервіс була подана 19 січня Клієнт не отримав зворотного звязку протягом тижня Компанія перевірила наявність заявки та пообіцяла повторно звязатися з клієнтом",
    },
    {
        "id": 249,
        "date": "2025-01-30 11:08:10",
        "phone": "380990425927",
        "manager_name": "Петро Ким",
        "notes": " Запит на котел (0001 - 0024) Клієнт знайшов оголошення про продаж котлів у Дніпрі Запитує про наявність 10-кіловатного котла типу Зубер Цікавиться 5-міліметровою стінкою теплообмінника і плиткою зверху  Обговорення цін (0027 - 0054) Зубер класік з плитою неутеплений коштує 19 тисяч Утеплений варіант коштує 21 тисячу Клієнт зацікавлений у неутепленому варіанті за 19 тисяч  Доставка (0056 - 0116) Безкоштовна доставка на адресу Стандартна доставка до вівторка або на вихідні Клієнт просить про швидшу доставку  Терміни доставки (0116 - 0224) Клієнт наполягає на доставці завтра або післязавтра Продавець погоджується уточнити можливість доставки післязавтра Котел потрібен клієнту на пятницю Продавець обіцяє перетелефонувати з уточненням",
    },
    {
        "id": 250,
        "date": "2025-01-30 11:40:16",
        "phone": "380990425927",
        "manager_name": "Петро Ким",
        "notes": " Доставка котла (0000 - 0137) Водій доставить котел клієнту Клієнт повинен оплатити котел при отриманні Документи будуть відправлені окремо через Нову пошту Бухгалтерія підготує всі необхідні документи  Документація та оплата (0137 - 0313) Клієнт потребує видаткову накладну Паспорт котла з серійним номером буде в оригіналі разом з котлом Цифрові копії документів також будуть надіслані  Деталі доставки (0313 - 0409) Орієнтовний час доставки пятниця ввечері або субота вранці Клієнт підтвердив адресу доставки Дніпро, Нова пошта 31 Контактна особа Дмитро Похотло-Жубар",
    },
    {
        "id": 251,
        "date": "2025-01-30 11:24:40",
        "phone": "380663100287",
        "manager_name": "Яна Віленська",
        "notes": " Обговорення утилізатора Зубер (0001 - 0335) Розглядаються моделі утилізатора на 18 кВт та 20 кВт Висота обох моделей - 1,10 м Різниця в ціні - 1000 грн Утеплений варіант на 2000 грн дорожче Топка і теплообмінники виготовлені з металу 5 мм Гарантія на герметичність котла - 5 років  Технічні характеристики (0336 - 0619) Обговорюється можливість перенесення патрубків Електроніка польського виробництва, коштує 4500 грн В комплекті йде механічний регулятор тяги Можливість оплати при отриманні або в розстрочку Розстрочка на 6 місяців без переплат через ПриватБанк  Доставка та оплата (0620 - 1151) Безкоштовна доставка курєром Нової Пошти Проблема з розвантаженням важкого котла (210-230 кг) Обговорення можливості доставки машиною з гідробортом Рекомендація уточнити тип машини у місцевому відділенні Нової Пошти Клієнт планує зробити замовлення наступного дня",
    },
]

records_salesdrive = [
    {"id_data": 8331, "phone_contact": "380663100287", "user_name": "Яна Віленська"},
    {"id_data": 8330, "phone_contact": "380972639733", "user_name": "Яна Віленська"},
    {"id_data": 8329, "phone_contact": "0669224650", "user_name": "Вадим Мишковець"},
    {"id_data": 8328, "phone_contact": "0992644039", "user_name": "Вадим Мишковець"},
    {"id_data": 8327, "phone_contact": "380675087473", "user_name": "Вадим Мишковець"},
    {"id_data": 8326, "phone_contact": "380504233489", "user_name": "Яна Віленська"},
    {
        "id_data": 8325,
        "phone_contact": "380676712106",
        "user_name": "Виталий Сухотерин",
    },
    {"id_data": 8323, "phone_contact": "380976585317", "user_name": "Петро Кім"},
    {"id_data": 8322, "phone_contact": "380993724437", "user_name": "Вадим Мишковець"},
    {"id_data": 8321, "phone_contact": "380685190511", "user_name": "Петро Кім"},
    {"id_data": 8320, "phone_contact": "0950015548", "user_name": "Виталий Сухотерин"},
    {"id_data": 8319, "phone_contact": "380975629008", "user_name": "Вадим Мишковець"},
    {"id_data": 8318, "phone_contact": "380639797508", "user_name": "Вадим Мишковець"},
]

formatted_records, matched_ids = find_matching_records(records_bd, records_salesdrive)

print(formatted_records)  # Вернет запись с id_data: 8320, так как это максимальный id
print(matched_ids)  # Вернет запись с id_data: 8320, так как это максимальный id
