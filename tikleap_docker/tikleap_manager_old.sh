#!/bin/bash

# =============================================================================
# üéØ TikLeap Authentication Manager
# –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Docker –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
# =============================================================================

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
CONTAINER_NAME="nodriver-manual-auth"
VNC_URL="http://localhost:7900"
VNC_PASSWORD="secret"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
COOKIES_DIR="${SCRIPT_DIR}/cookies"
APP_DIR="${SCRIPT_DIR}/app"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_step() {
    echo -e "${PURPLE}[STEP]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if ! command -v docker &> /dev/null; then
        log_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        exit 1
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        log_error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        exit 1
    fi
    
    log_success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫
create_structure() {
    log_step "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    
    mkdir -p "${APP_DIR}" "${COOKIES_DIR}" "${SCRIPT_DIR}/data"
    
    log_success "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞: ${SCRIPT_DIR}"
}

# –°–æ–∑–¥–∞–Ω–∏–µ docker-compose.yml
create_docker_compose() {
    log_step "–°–æ–∑–¥–∞–Ω–∏–µ docker-compose.yml..."
    
    cat > "${SCRIPT_DIR}/docker-compose.yml" << 'EOF'
services:
  nodriver-auth:
    image: selenium/standalone-chrome:4.15.0
    container_name: nodriver-manual-auth
    ports:
      - "4444:4444"    # Selenium Grid –ø–æ—Ä—Ç
      - "7900:7900"    # noVNC –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    volumes:
      - ./app:/workspace/app
      - ./cookies:/home/seluser/tikleap_work/cookies
      - ./data:/workspace/data
    environment:
      - SE_SCREEN_WIDTH=1920
      - SE_SCREEN_HEIGHT=1080
      - SE_VNC_PASSWORD=secret
      - SE_START_XVFB=true
    restart: unless-stopped
    shm_size: 2gb
EOF
    
    log_success "docker-compose.yml —Å–æ–∑–¥–∞–Ω"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
check_container_status() {
    if docker ps -a --format "table {{.Names}}" | grep -q "^${CONTAINER_NAME}$"; then
        if docker ps --format "table {{.Names}}" | grep -q "^${CONTAINER_NAME}$"; then
            echo "running"
        else
            echo "stopped"
        fi
    else
        echo "not_exists"
    fi
}

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
start_container() {
    log_step "–ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    
    local status=$(check_container_status)
    
    case $status in
        "running")
            log_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
            ;;
        "stopped")
            log_info "–ó–∞–ø—É—Å–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            docker-compose up -d
            ;;
        "not_exists")
            log_info "–°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
            docker-compose up -d
            ;;
    esac
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    log_info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    for i in {1..30}; do
        if docker exec "${CONTAINER_NAME}" pgrep -f "chrome" > /dev/null 2>&1; then
            log_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
            return 0
        fi
        sleep 2
        echo -n "."
    done
    
    log_error "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
    return 1
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
stop_container() {
    log_step "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    
    docker-compose down
    log_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
install_dependencies() {
    log_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏ —É–∂–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if docker exec "${CONTAINER_NAME}" python3 -c "import nodriver" 2>/dev/null; then
        log_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        return 0
    fi
    
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ nodriver –∏ loguru..."
    docker exec "${CONTAINER_NAME}" bash -c "
        apt-get update > /dev/null 2>&1 && 
        apt-get install -y python3-pip > /dev/null 2>&1 &&
        pip3 install nodriver loguru pathlib > /dev/null 2>&1
    "
    
    log_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
copy_auth_script() {
    log_step "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..."
    
    if [ ! -f "${APP_DIR}/auth_gui.py" ]; then
        log_error "–§–∞–π–ª auth_gui.py –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ ${APP_DIR}/"
        log_info "–ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª auth_gui.py –≤ –ø–∞–ø–∫—É app/"
        return 1
    fi
    
    docker cp "${APP_DIR}/auth_gui.py" "${CONTAINER_NAME}:/workspace/app/"
    log_success "–°–∫—Ä–∏–ø—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
}
# –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞
# –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞
auto_setup_and_install() {
    log_step "ü§ñ –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞..."
    
    # –û—Ç–∫–ª—é—á–∞–µ–º set -e –≤—Ä–µ–º–µ–Ω–Ω–æ –¥–ª—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    set +e
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    check_dependencies
    
    # 2. –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    create_structure
    create_docker_compose
    
    # 3. –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    log_info "–ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    docker-compose up -d
    
    # 3.5. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    fix_permissions
    
    # 4. –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    log_info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–¥–æ 60 —Å–µ–∫—É–Ω–¥)..."
    for i in {1..30}; do
        if docker exec "${CONTAINER_NAME}" echo "ready" > /dev/null 2>&1; then
            log_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –≥–æ—Ç–æ–≤ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ"
            break
        fi
        sleep 2
        echo -n "."
    done
    echo ""
    
    # 5. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å –ø—Ä–∞–≤–∞–º–∏ root
    log_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
    
    # –î–µ—Ç–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å –ø—Ä–∞–≤–∞–º–∏ root
    log_info "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    if docker exec --user root "${CONTAINER_NAME}" bash -c "apt-get update"; then
        log_success "–ü–∞–∫–µ—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
    else
        log_error "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–∫–µ—Ç–æ–≤"
        set -e
        return 1
    fi
    
    log_info "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    if docker exec --user root "${CONTAINER_NAME}" bash -c "apt-get install -y python3-pip wget curl"; then
        log_success "–°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        log_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"
        set -e
        return 1
    fi
    
    log_info "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∏ pip..."
    docker exec "${CONTAINER_NAME}" python3 --version
    docker exec "${CONTAINER_NAME}" pip3 --version
    
    log_info "üìö –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    # –°–Ω–∞—á–∞–ª–∞ –æ–±–Ω–æ–≤–ª—è–µ–º pip
    docker exec "${CONTAINER_NAME}" python3 -m pip install --upgrade pip --user
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã –ø–æ –æ–¥–Ω–æ–º—É
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ loguru..."
    if docker exec "${CONTAINER_NAME}" python3 -m pip install --user loguru; then
        log_success "loguru —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        log_warning "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ loguru"
    fi
    
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ nodriver..."
    if docker exec "${CONTAINER_NAME}" python3 -m pip install --user nodriver; then
        log_success "nodriver —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        log_warning "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ nodriver, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±..."
        docker exec "${CONTAINER_NAME}" python3 -m pip install --user --no-deps nodriver
    fi
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –º–æ–¥—É–ª—å –æ—Ç–¥–µ–ª—å–Ω–æ
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ loguru..."
    if docker exec "${CONTAINER_NAME}" python3 -c "import loguru; print('‚úÖ loguru —Ä–∞–±–æ—Ç–∞–µ—Ç')"; then
        log_success "loguru —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        log_warning "loguru –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ nodriver..."
    if docker exec "${CONTAINER_NAME}" python3 -c "import nodriver; print('‚úÖ nodriver —Ä–∞–±–æ—Ç–∞–µ—Ç')"; then
        log_success "nodriver —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        log_warning "nodriver –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    log_info "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π..."
    if docker exec "${CONTAINER_NAME}" python3 -c "
import sys
success = True

try:
    import loguru
    print('‚úÖ loguru: OK')
except Exception as e:
    print(f'‚ùå loguru: {e}')
    success = False

try:
    import nodriver
    print('‚úÖ nodriver: OK')
except Exception as e:
    print(f'‚ùå nodriver: {e}')
    success = False

if success:
    print('üéâ –í—Å–µ –º–æ–¥—É–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç!')
else:
    print('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥—É–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...')
"; then
        log_success "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    else
        log_warning "–ü—Ä–æ–±–ª–µ–º—ã —Å –º–æ–¥—É–ª—è–º–∏, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
    fi
    
    # 7. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
    if copy_auth_script; then
        log_success "–°–∫—Ä–∏–ø—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
    else
        log_error "–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞"
        set -e
        return 1
    fi
    
    # 8. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    log_step "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Chrome (—Å —Ç–∞–π–º–∞—É—Ç–æ–º)
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Chrome..."
    for i in {1..10}; do
        if docker exec "${CONTAINER_NAME}" pgrep -f "chrome" > /dev/null 2>&1; then
            log_success "Chrome –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤"
            break
        fi
        sleep 1
        echo -n "."
    done
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python —Å–∫—Ä–∏–ø—Ç
    if docker exec "${CONTAINER_NAME}" test -f "/workspace/app/auth_gui.py"; then
        log_success "–°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤"
    else
        log_error "–°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        set -e
        return 1
    fi
    
    log_success "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ."
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º set -e
    set -e
    return 0
}
fix_permissions() {
    log_step "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –ø–∞–ø–∫—É cookies –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    log_info "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –Ω–∞ –ø–∞–ø–∫—É cookies –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
    docker exec --user root "${CONTAINER_NAME}" bash -c "
        mkdir -p /home/seluser/tikleap_work/cookies &&
        chown -R seluser:seluser /home/seluser/tikleap_work &&
        chmod -R 755 /home/seluser/tikleap_work
    "
    
    # –¢–∞–∫–∂–µ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Ö–æ—Å—Ç-—Å–∏—Å—Ç–µ–º–µ
    log_info "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –Ω–∞ —Ö–æ—Å—Ç-–ø–∞–ø–∫—É cookies..."
    chmod -R 777 "${COOKIES_DIR}" 2>/dev/null || true
    
    log_success "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
}

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - —Ç–æ–ª—å–∫–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
setup_only() {
    log_step "üîß –¢–æ–ª—å–∫–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
    
    if auto_setup_and_install; then
        log_success "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: $0 --auth"
    else
        log_error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ"
        return 1
    fi
}
# –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
run_auth() {
    log_step "–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..."
    
    echo -e "\n${CYAN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${CYAN}ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø${NC}"
    echo -e "${CYAN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${GREEN}‚úÖ${NC} VNC –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: ${BLUE}${VNC_URL}${NC}"
    echo -e "${GREEN}‚úÖ${NC} –ü–∞—Ä–æ–ª—å –¥–ª—è VNC: ${YELLOW}${VNC_PASSWORD}${NC}"
    echo -e "${GREEN}‚úÖ${NC} –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:"
    echo -e "   ${CYAN}Email:${NC} 37200@starlivemail.com"
    echo -e "   ${CYAN}–ü–∞—Ä–æ–ª—å:${NC} bfnsa232@1!dsA"
    echo -e "${GREEN}üîÑ${NC} –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..."
    echo -e "${CYAN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}\n"
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ (–¥–ª—è macOS/Linux)
    if command -v open &> /dev/null; then
        log_info "–û—Ç–∫—Ä—ã—Ç–∏–µ VNC –≤ –±—Ä–∞—É–∑–µ—Ä–µ..."
        open "${VNC_URL}" 2>/dev/null || true
    elif command -v xdg-open &> /dev/null; then
        log_info "–û—Ç–∫—Ä—ã—Ç–∏–µ VNC –≤ –±—Ä–∞—É–∑–µ—Ä–µ..."
        xdg-open "${VNC_URL}" 2>/dev/null || true
    fi
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–±–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞)
    log_info "–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (—Ç–∞–π–º–∞—É—Ç 60 —Å–µ–∫—É–Ω–¥)..."
    docker exec "${CONTAINER_NAME}" python3 /workspace/app/auth_gui.py
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    sleep 5
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..."
    
    if [ -f "${COOKIES_DIR}/cookies_important.json" ]; then
        log_success "üéâ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! Cookies —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã."
        check_cookies
    else
        log_warning "‚ö†Ô∏è  Cookies –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ VNC."
        log_info "–û—Ç–∫—Ä–æ–π—Ç–µ ${VNC_URL} –¥–ª—è —Ä—É—á–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏."
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö cookies
check_cookies() {
    log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö cookies..."
    
    if [ ! -d "${COOKIES_DIR}" ]; then
        log_warning "–ü–∞–ø–∫–∞ cookies –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        return 1
    fi
    
    local important_file="${COOKIES_DIR}/cookies_important.json"
    local session_file="${COOKIES_DIR}/browser_session.dat"
    
    if [ -f "${important_file}" ]; then
        log_success "–ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –≤–∞–∂–Ω—ã—Ö cookies: ${important_file}"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
        if command -v python3 &> /dev/null; then
            local expires_check=$(python3 -c "
import json
import datetime
try:
    with open('${important_file}', 'r') as f:
        data = json.load(f)
    expires_at = datetime.datetime.fromisoformat(data.get('expires_at', ''))
    if datetime.datetime.now() < expires_at:
        print('valid')
    else:
        print('expired')
except:
    print('error')
" 2>/dev/null)
            
            case $expires_check in
                "valid")
                    log_success "Cookies –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã"
                    ;;
                "expired")
                    log_warning "Cookies –∏—Å—Ç–µ–∫–ª–∏, –Ω—É–∂–Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"
                    ;;
                *)
                    log_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è cookies"
                    ;;
            esac
        fi
    else
        log_warning "–§–∞–π–ª –≤–∞–∂–Ω—ã—Ö cookies –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    if [ -f "${session_file}" ]; then
        log_success "–ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞: ${session_file}"
    else
        log_warning "–§–∞–π–ª —Å–µ—Å—Å–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã cookies
    echo -e "\n${CYAN}üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ cookies:${NC}"
    ls -la "${COOKIES_DIR}" || echo "–ü–∞–ø–∫–∞ –ø—É—Å—Ç–∞"
}

# –û—á–∏—Å—Ç–∫–∞ cookies
clean_cookies() {
    log_step "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö cookies..."
    
    if [ -d "${COOKIES_DIR}" ]; then
        rm -rf "${COOKIES_DIR}"/*
        log_success "Cookies –æ—á–∏—â–µ–Ω—ã"
    else
        log_info "–ü–∞–ø–∫–∞ cookies –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
show_logs() {
    log_step "–ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    
    docker logs -f --tail=50 "${CONTAINER_NAME}"
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
show_menu() {
    echo -e "\n${PURPLE}üé¨ TikLeap Authentication Manager${NC}"
    echo -e "${CYAN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${GREEN}1.${NC} üöÄ –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ (—Å–æ–∑–¥–∞—Ç—å + –∑–∞–ø—É—Å—Ç–∏—Ç—å + –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è)"
    echo -e "${GREEN}2.${NC} üîß –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    echo -e "${GREEN}3.${NC} ‚ñ∂Ô∏è  –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    echo -e "${GREEN}4.${NC} üîê –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é"
    echo -e "${GREEN}5.${NC} üç™ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å cookies"
    echo -e "${GREEN}6.${NC} üóëÔ∏è  –û—á–∏—Å—Ç–∏—Ç—å cookies"
    echo -e "${GREEN}7.${NC} üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo -e "${GREEN}8.${NC} ‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    echo -e "${GREEN}9.${NC} ‚ùå –í—ã—Ö–æ–¥"
    echo -e "${CYAN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
}

# –ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫
full_setup() {
    log_step "üéØ –ü–æ–ª–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ TikLeap Authentication"
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Å–µ–≥–æ
    if auto_setup_and_install; then
        echo -e "\n${GREEN}‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ –∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏!${NC}"
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è
        log_info "–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã..."
        sleep 3
        run_auth
    else
        log_error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏."
        return 1
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-menu}" in
    -f|--full|full)
        full_setup  # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –≤—ã—à–µ —Å auto_setup_and_install
        ;;
    -s|--setup|setup)
        setup_only  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é —Ç–æ–ª—å–∫–æ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        ;;
    -auto|--auto|auto)
        auto_setup_and_install  # –¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞
        ;;
    -u|--up|up|start)
        start_container
        ;;
    -a|--auth|auth)
        install_dependencies
        copy_auth_script
        run_auth
        ;;
    -c|--check|check)
        check_cookies
        ;;
    -clean|--clean|clean)
        clean_cookies
        ;;
    -l|--logs|logs)
        show_logs
        ;;
    -d|--down|down|stop)
        stop_container
        ;;
    -h|--help|help)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê]"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  -f, --full     –ü–æ–ª–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫"
        echo "  -s, --setup    –¢–æ–ª—å–∫–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
        echo "  --auto         –ê–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
        echo "  -u, --up       –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
        echo "  -a, --auth     –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é"
        echo "  -c, --check    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å cookies"
        echo "  --clean        –û—á–∏—Å—Ç–∏—Ç—å cookies"
        echo "  -l, --logs     –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
        echo "  -d, --down     –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
        echo "  -h, --help     –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å"
        echo ""
        echo "–ë–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é"
        ;;
    menu|*)
        while true; do
            show_menu
            read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-9): " choice
            
            case $choice in
                1)
                    full_setup  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–µ—Ä—Å–∏—è
                    ;;
                2)
                    setup_only  # –¢–æ–ª—å–∫–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∞
                    ;;
                3)
                    start_container
                    ;;
                4)
                    install_dependencies
                    copy_auth_script
                    run_auth
                    ;;
                5)
                    check_cookies
                    ;;
                6)
                    clean_cookies
                    ;;
                7)
                    show_logs
                    ;;
                8)
                    stop_container
                    ;;
                9)
                    log_info "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
                    exit 0
                    ;;
                *)
                    log_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ 1-9."
                    ;;
            esac
            
            echo ""
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        done
        ;;
esac