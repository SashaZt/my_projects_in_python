"""Add reservation tables

Revision ID: bf5b421d85b1
Revises: 491a0bab7c62
Create Date: 2025-03-23 15:48:03.018003

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'bf5b421d85b1'
down_revision: Union[str, None] = '491a0bab7c62'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customers',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('telephone', sa.String(length=255), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    op.create_table('reservations',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('organizationId', sa.Integer(), nullable=False),
    sa.Column('customerId', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('services', sa.JSON(), nullable=True),
    sa.Column('bookedAt', sa.Integer(), nullable=False),
    sa.Column('modifiedAt', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(length=255), nullable=False),
    sa.Column('responsibleUserId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['customerId'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reservations_id'), 'reservations', ['id'], unique=False)
    op.create_table('room_reservations',
    sa.Column('roomReservationId', sa.String(length=255), nullable=False),
    sa.Column('reservationId', sa.String(length=255), nullable=False),
    sa.Column('roomId', sa.String(length=255), nullable=False),
    sa.Column('categoryId', sa.Integer(), nullable=False),
    sa.Column('arrival', sa.Integer(), nullable=False),
    sa.Column('departure', sa.Integer(), nullable=False),
    sa.Column('guestName', sa.String(length=255), nullable=False),
    sa.Column('numberOfGuests', sa.Integer(), nullable=False),
    sa.Column('rateId', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('currencyCode', sa.String(length=10), nullable=False),
    sa.Column('invoice', sa.Float(), nullable=False),
    sa.Column('paid', sa.Float(), nullable=False),
    sa.Column('locked', sa.Boolean(), nullable=True),
    sa.Column('detailed', sa.Boolean(), nullable=True),
    sa.Column('addOns', sa.JSON(), nullable=True),
    sa.Column('guestExtraCharges', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['reservationId'], ['reservations.id'], ),
    sa.PrimaryKeyConstraint('roomReservationId')
    )
    op.create_index(op.f('ix_room_reservations_roomReservationId'), 'room_reservations', ['roomReservationId'], unique=False)
    
    # Удаляем таблицу olx_tokens
    op.drop_table('olx_tokens')
    
    # ИСПРАВЛЕНО: Сначала удаляем внешний ключ telegram_messages_ibfk_3
    try:
        op.drop_constraint('telegram_messages_ibfk_3', 'telegram_messages', type_='foreignkey')
    except:
        # Если ограничение не существует или имеет другое имя
        pass
    
    # Затем изменяем типы колонок
    op.alter_column('telegram_messages', 'id', 
                    existing_type=sa.INTEGER(), 
                    type_=sa.BigInteger(), 
                    nullable=False, 
                    autoincrement=True)
    
    op.alter_column('telegram_messages', 'reply_to', 
                    existing_type=sa.INTEGER(), 
                    type_=sa.BigInteger(), 
                    nullable=True)
    
    # Создаем уникальное ограничение для message_id
    op.create_unique_constraint(None, 'telegram_messages', ['message_id'])
    
    # Создаем внешний ключ заново
    op.create_foreign_key('telegram_messages_ibfk_3', 
                          'telegram_messages', 
                          'telegram_messages', 
                          ['reply_to'], 
                          ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # ИСПРАВЛЕНО: Сначала удаляем внешний ключ
    try:
        op.drop_constraint('telegram_messages_ibfk_3', 'telegram_messages', type_='foreignkey')
    except:
        pass
        
    op.drop_constraint(None, 'telegram_messages', type_='unique')
    
    # Изменяем типы колонок обратно
    op.alter_column('telegram_messages', 'reply_to', 
                    existing_type=sa.BigInteger(), 
                    type_=sa.INTEGER(), 
                    nullable=True)
    
    op.alter_column('telegram_messages', 'id', 
                    existing_type=sa.BigInteger(), 
                    type_=sa.INTEGER(), 
                    nullable=False, 
                    autoincrement=True)
    
    # Создаем внешний ключ заново
    op.create_foreign_key('telegram_messages_ibfk_3', 
                          'telegram_messages', 
                          'telegram_messages', 
                          ['reply_to'], 
                          ['id'])
    
    # Восстанавливаем таблицу olx_tokens
    op.create_table('olx_tokens',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('access_token', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('refresh_token', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('expires_in', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('token_type', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('scope', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    
    # Удаляем созданные в upgrade таблицы
    op.drop_index(op.f('ix_room_reservations_roomReservationId'), table_name='room_reservations')
    op.drop_table('room_reservations')
    op.drop_index(op.f('ix_reservations_id'), table_name='reservations')
    op.drop_table('reservations')
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.drop_table('customers')
    # ### end Alembic commands ###