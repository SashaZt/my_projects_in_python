"""Split TelegramMessage into TelegramUser

Revision ID: 433e0f330f9b
Revises: 259e6e460e3b
Create Date: 2025-01-25 17:33:12.650770

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '433e0f330f9b'
down_revision: Union[str, None] = '259e6e460e3b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('telegram_users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_id')
    )
    op.alter_column('telegram_messages', 'sender_id',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('telegram_messages', 'recipient_id',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               nullable=False)
    op.alter_column('telegram_messages', 'message',
               existing_type=mysql.TEXT(),
               nullable=False)
    op.create_foreign_key(None, 'telegram_messages', 'telegram_users', ['recipient_id'], ['id'])
    op.create_foreign_key(None, 'telegram_messages', 'telegram_users', ['sender_id'], ['id'])
    op.drop_column('telegram_messages', 'recipient_name')
    op.drop_column('telegram_messages', 'sender_type')
    op.drop_column('telegram_messages', 'recipient_phone')
    op.drop_column('telegram_messages', 'sender_username')
    op.drop_column('telegram_messages', 'recipient_username')
    op.drop_column('telegram_messages', 'sender_name')
    op.drop_column('telegram_messages', 'sender_phone')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('telegram_messages', sa.Column('sender_phone', mysql.VARCHAR(length=20), nullable=True))
    op.add_column('telegram_messages', sa.Column('sender_name', mysql.VARCHAR(length=255), nullable=True))
    op.add_column('telegram_messages', sa.Column('recipient_username', mysql.VARCHAR(length=255), nullable=True))
    op.add_column('telegram_messages', sa.Column('sender_username', mysql.VARCHAR(length=255), nullable=True))
    op.add_column('telegram_messages', sa.Column('recipient_phone', mysql.VARCHAR(length=20), nullable=True))
    op.add_column('telegram_messages', sa.Column('sender_type', mysql.VARCHAR(length=50), nullable=True))
    op.add_column('telegram_messages', sa.Column('recipient_name', mysql.VARCHAR(length=255), nullable=True))
    op.drop_constraint(None, 'telegram_messages', type_='foreignkey')
    op.drop_constraint(None, 'telegram_messages', type_='foreignkey')
    op.alter_column('telegram_messages', 'message',
               existing_type=mysql.TEXT(),
               nullable=True)
    op.alter_column('telegram_messages', 'recipient_id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               nullable=True)
    op.alter_column('telegram_messages', 'sender_id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               nullable=True)
    op.drop_table('telegram_users')
    # ### end Alembic commands ###
