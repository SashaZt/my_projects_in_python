# utils/formatters.py
from datetime import datetime
from typing import List
from database.models import Event, Booking
from services.booking_service import BookingService
from config import PRICE, CURRENCY, CONDITIONS_TEXT


class MessageFormatter:
    @staticmethod
    async def format_event_message(event: Event) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–æ–±—ã—Ç–∏–∏"""
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        booking_count = await BookingService.get_booking_count(event.id)
        
        # –°–æ–∑–¥–∞–µ–º –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é –º–µ—Å—Ç
        places_visual = ""
        for i in range(4):  # MAX_PARTICIPANTS = 4
            if i < booking_count:
                places_visual += "üü©"
            else:
                places_visual += "‚¨úÔ∏è"
        
        message = f"""**{event.title}**

üìÖ –î–∞—Ç–∞: {event.event_date}
üïê –í—Ä–µ–º—è: {event.event_time}
üìç –ú–µ—Å—Ç–æ: {event.location}
üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç: {places_visual} ({booking_count}/4)
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {PRICE} {CURRENCY}

{CONDITIONS_TEXT}"""
        
        return message
    
    @staticmethod
    def format_admin_event_list(events: List[Event]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∞"""
        if not events:
            return "üìã –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π"
        
        message = "üìã **–í–∞—à–∏ —Å–æ–±—ã—Ç–∏—è:**\n\n"
        for event in events:
            message += f"üèãÔ∏è‚Äç‚ôÇÔ∏è **{event.title}**\n"
            message += f"üìÖ {event.event_date} –≤ {event.event_time}\n"
            message += f"üìç {event.location}\n"
            message += f"ID: `{event.id}`\n\n"
        
        return message
    
    @staticmethod
    def format_user_bookings(bookings: List[tuple]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if not bookings:
            return "üìã –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π"
        
        message = "üìã **–í–∞—à–∏ –∑–∞–ø–∏—Å–∏:**\n\n"
        for booking, title, event_date, event_time in bookings:
            message += f"üèãÔ∏è‚Äç‚ôÇÔ∏è **{title}**\n"
            message += f"üìÖ {event_date} –≤ {event_time}\n"
            message += f"ID —Å–æ–±—ã—Ç–∏—è: `{booking.event_id}`\n\n"
        
        return message