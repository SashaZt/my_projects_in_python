# handlers/user.py - —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from config import ADMIN_IDS
from config.logger import logger

router = Router()

@router.message(Command("start"))
async def start_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /start - –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"""
    
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ –≥—Ä—É–ø–ø–∞—Ö
    if message.chat.type in ['group', 'supergroup', 'channel']:
        return
    
    user_id = message.from_user.id
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω - —Å—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
    if user_id in ADMIN_IDS:
        from services.user_service import UserService
        from keyboards.admin import AdminKeyboards
        
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∞ –≤ –ë–î
        await UserService.get_or_create_user(
            telegram_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name,
            is_admin=True
        )
        
        text = f"""üîß –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!

üìã –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
‚Ä¢ –í—ã —Å–æ–∑–¥–∞–µ—Ç–µ —Å–æ–±—ã—Ç–∏—è –∑–¥–µ—Å—å –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ
‚Ä¢ –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—É–±–ª–∏–∫—É–µ—Ç –∏—Ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–æ–ø–∏–∫–∏ –≥—Ä—É–ø–ø—ã
‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏ –≤ –≥—Ä—É–ø–ø–µ

–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:"""
        
        keyboard = AdminKeyboards.main_menu()
        await message.answer(text, reply_markup=keyboard)
        return
    
    # –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    welcome_text = f"""–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã

üéæ MTA Tennis Academy - –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø–∏—Å–∏

üìç –ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É:
1Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –æ—Å–Ω–æ–≤–Ω—É—é –≥—Ä—É–ø–ø—É
2Ô∏è‚É£ –ù–∞–π–¥–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º —Ç–æ–ø–∏–∫–µ
3Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "‚úÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è"
4Ô∏è‚É£ –î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å"

üí° –í–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å:
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 4 –º–µ—Å—Ç–∞ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
‚Ä¢ –û—Ç–º–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–∞ –∑–∞ 48 —á–∞—Å–æ–≤ –¥–æ —Å–æ–±—ã—Ç–∏—è
‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å: 90 –∑–ª–æ—Ç—ã—Ö

üì± –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –≤ –≥—Ä—É–ø–ø–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏!"""
    
    await message.answer(welcome_text)

    
@router.message(Command("help"))
async def help_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /help - —Ç–æ–ª—å–∫–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"""
    
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ –≥—Ä—É–ø–ø–∞—Ö
    if message.chat.type in ['group', 'supergroup', 'channel']:
        return
    
    help_text = """ü§ñ **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é**

üéæ **–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:**
‚Ä¢ –í—Å–µ –∑–∞–ø–∏—Å–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –≥—Ä—É–ø–ø–µ
‚Ä¢ –ù–∞–π–¥–∏—Ç–µ –Ω—É–∂–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –≤ —Ç–æ–ø–∏–∫–∞—Ö –≥—Ä—É–ø–ø—ã
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ "‚úÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è" / "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å"

üìã **–¢–æ–ø–∏–∫–∏ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏:**
‚Ä¢ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
‚Ä¢ –í—Ç–æ—Ä–Ω–∏–∫  
‚Ä¢ –°—Ä–µ–¥–∞
‚Ä¢ –ß–µ—Ç–≤–µ—Ä–≥
‚Ä¢ –ü—è—Ç–Ω–∏—Ü–∞
‚Ä¢ –°—É–±–±–æ—Ç–∞
‚Ä¢ –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
‚Ä¢ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–ª—è –¥–µ—Ç–µ–π

‚ö†Ô∏è **–í–∞–∂–Ω—ã–µ —É—Å–ª–æ–≤–∏—è:**
‚Ä¢ –û—Ç–º–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–∞ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ —á–µ–º –∑–∞ 48 —á–∞—Å–æ–≤
‚Ä¢ –ü—Ä–∏ –±–æ–ª–µ–µ –ø–æ–∑–¥–Ω–µ–π –æ—Ç–º–µ–Ω–µ –∑–∞–Ω—è—Ç–∏–µ –ø–æ–¥–ª–µ–∂–∏—Ç –æ–ø–ª–∞—Ç–µ
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 4 —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å: 90 –∑–ª–æ—Ç—ã—Ö

üë®‚Äçüíº **–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/admin` –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π

üìû **–ü–æ–¥–¥–µ—Ä–∂–∫–∞:**
–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."""
    
    await message.answer(help_text, parse_mode="Markdown")

@router.message(Command("admin"))
async def redirect_to_admin(message: Message):
    """–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫ –∞–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥–µ"""
    
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ –≥—Ä—É–ø–ø–∞—Ö
    if message.chat.type in ['group', 'supergroup', 'channel']:
        return
    
    user_id = message.from_user.id
    
    if user_id in ADMIN_IDS:
        await message.answer(
            "üîß –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `/admin` –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
            parse_mode="Markdown"
        )
    else:
        await message.answer(
            "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
            parse_mode="Markdown"
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@router.message()
async def unknown_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¢–û–õ–¨–ö–û –≤ –ª–∏—á–Ω—ã—Ö —á–∞—Ç–∞—Ö"""
    
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –≥—Ä—É–ø–ø/–∫–∞–Ω–∞–ª–æ–≤
    if message.chat.type in ['group', 'supergroup', 'channel']:
        return
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if message.chat.type == 'private':
        help_text = """‚ùì **–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞**

üéæ **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ `/start` - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
‚Ä¢ `/help` - –ø–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞

üë®‚Äçüíº **–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:**
‚Ä¢ `/admin` - –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è–º–∏

üìç **–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:**
–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –æ—Å–Ω–æ–≤–Ω—É—é –≥—Ä—É–ø–ø—É –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö."""
        
        await message.answer(help_text, parse_mode="Markdown")

@router.callback_query()
async def debug_user_callbacks(callback: CallbackQuery):
    """Debug –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö callback'–æ–≤"""
    logger.info(f"üë§ USER DEBUG: callback –æ—Ç {callback.from_user.id}")
    logger.info(f"üë§ USER Chat ID: {callback.message.chat.id}")
    logger.info(f"üë§ USER callback.data: '{callback.data}'")